.wrap {
    outline: none; max-width: 100%; max-height: 100%; position: relative; min-width: 32px; min-height: 32px; display: flex; flex-direction: column; border-radius: var(--g-radius);
    &:not(.plain) {
        border: solid .5px var(--g-plain-border-color); background: var(--g-plain-background);
        &.mode-view {
            border: none; border-top: solid .5px var(--g-plain-border-color-plain);
        }
    }
    &[data-cg-disabled] {
        background: var(--g-plain-background-disabled); color: var(--g-color-disabled); fill: var(--g-color-disabled); stroke: var(--g-color-disabled);
        > * {
            pointer-events: none;
        }
    }

    .t {
        display: flex; max-height: 100%; flex: 1; height: 0; position: relative;

        cg-vflow, cg-flow {
            flex: 1; padding: 1px;
    
            // --- item ---
            // --- 下面的 [data-cg-base] 是用来解决 base 模式下背景透明的问题 ---
            .item {
                display: flex; border: solid .5px transparent; border-radius: var(--g-radius); transition: var(--g-transition);
                [data-cg-base] {
                    background: var(--g-plain-background);
                }
                &:not([data-cg-disabled]):not(.unavailable) {
                    &:hover {
                        background: var(--g-plain-background-hover);
                        [data-cg-base] {
                            background: var(--g-plain-background-hover);
                        }
                    }
                    &.selected {
                        background: var(--g-plain-background-selected);
                        [data-cg-base] {
                            background: var(--g-plain-background-selected);
                        }
                    }
                    &.shift {
                        border-color: var(--g-plain-border-color-plain);
                    }
                }
                &[data-cg-disabled], &.unavailable {
                    color: var(--g-color-disabled); fill: var(--g-color-disabled); stroke: var(--g-color-disabled); pointer-events: none;
                }
    
                .itemInner {
                    padding: var(--g-padding);
                    &:not(.content-width-max) {
                        flex: 1; width: 0; overflow: hidden;
                    }
                    &.content-width-max {
                        min-width: 100%;
                    }
                }
    
                .itemArrow {
                    width: 30px; display: flex; justify-content: center; align-items: center; transition: var(--g-transition);
                    &::after {
                        position: absolute; content: ''; border-style: solid; border-color: var(--g-color); width: 8px; height: 8px; transform: rotate(45deg); border-width: 1px 1px 0 0; margin-left: -4px;
                    }
                    &:hover {
                        background: var(--g-background-hover);
                    }
                    &:active {
                        background: var(--g-background-active);
                    }
    
                    &[data-cg-pop-open] {
                        background-color: var(--g-background-active);
                    }
                }
            }
    
            // --- split ---
            .split {
                margin: 1px 0; height: .5px; background: var(--g-plain-border-color);
            }
        }
        cg-scroll {
            width: 16px;
        }
    }
    &.mode-view {
        .t {
            cg-vflow, cg-flow {
                .item {
                    border-bottom-color: var(--g-plain-border-color-plain);
                    &:not([data-cg-disabled]):not(.unavailable) {
                        &.selected {
                            background: transparent;
                            [data-cg-base] {
                                background: transparent
                            }
                            &:hover {
                                background: var(--g-plain-background-hover);
                                [data-cg-base] {
                                    background: var(--g-plain-background-hover);
                                }
                            }
                        }
                        &.shift {
                            border-color: transparent transparent var(--g-plain-border-color-plain) transparent;
                        }
                    }
                }
            }
        }
    }

    .b {
        display: flex; position: sticky; bottom: 0; z-index: 1;
        cg-scroll {
            height: 16px; flex: 1; width: 0;
        }
        .rb {
            width: 16px; background: var(--face);
        }
    }

    .empty {
        flex: 1; display: flex; align-items: center; justify-content: center; position: absolute; width: 100%; height: 100%; background: url(./res/empty.png); background-size: 48px; background-position: center; background-repeat: no-repeat; pointer-events: none;
    }
}

.pop {
    color: var(--g-color); fill: var(--g-color); stroke: var(--g-color); border-radius: var(--g-radius); background: var(--g-pop-background); -webkit-backdrop-filter: var(--g-pop-backdrop); backdrop-filter: var(--g-pop-backdrop); border: var(--g-pop-border);
}