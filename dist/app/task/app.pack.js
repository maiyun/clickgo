var emodule=function(t){"use strict";function s(t){var s=Object.create(null);return t&&Object.keys(t).forEach(function(n){if("default"!==n){var o=Object.getOwnPropertyDescriptor(t,n);Object.defineProperty(s,n,o.get?o:{enumerable:!0,get:function(){return t[n]}})}}),s.default=t,Object.freeze(s)}var n=s(t);class o extends n.form.AbstractForm{get filename(){return"/form/bar/bar.js"}constructor(){super(...arguments),this.apps=[],this.label2={l:this.l("position")}}get position(){return n.core.config["task.position"]}showLauncher(){n.form.showLauncher()}async itemClick(t){if(0===this.apps[t].formCount)try{await n.task.run(this,this.apps[t].path)}catch{return}else if(1===this.apps[t].formCount){const s=Object.keys(this.apps[t].forms)[0],o=n.form.get(s);if(!o)return;o.focus?n.form.min(s):await n.form.changeFocus(s)}}async run(t){await n.task.run(this,t)}pin(t){const s=this.apps[t];if(!s)return;Object.keys(n.core.config["task.pin"]).includes(s.path)?delete n.core.config["task.pin"][s.path]:n.core.config["task.pin"][s.path]={name:s.name,icon:s.icon}}cclose(t){const s=this.apps[t];if(s)for(const t in s.forms)n.form.close(t)}async changeFocus(t){await n.form.changeFocus(t)}updatePosition(t){n.core.config["task.position"]=t}async onMounted(){this.topMost=!0,n.task.setSystem(this,this.formId);for(const t in n.core.config["task.pin"])this.apps.push({name:n.core.config["task.pin"][t].name,path:t,icon:n.core.config["task.pin"][t].icon,selected:!1,opened:!1,forms:{},formCount:0,pin:!0});const t=await n.task.getOriginList(this);for(const s in t){if(s===this.taskId)continue;const o=t[s];let e;const i=this.apps.findIndex(t=>t.path===o.path);i>=0?this.apps[i].opened=!0:e={name:o.app.config.name,path:o.path,icon:o.app.icon,selected:!1,opened:!0,forms:{},formCount:0,pin:!1};const p=n.form.getList(s);for(const t in p){const s=p[t];s.showInSystemTask&&(s.show&&((e??this.apps[i]).forms[t]={title:s.title,icon:s.icon||(e??this.apps[i]).icon}))}(e??this.apps[i]).formCount=Object.keys((e??this.apps[i]).forms).length,e?.formCount&&this.apps.push(e)}}onFormCreated(t,s,o,e,i){if(t===this.taskId)return;const p=n.task.get(t);if(!p)return;if(!i)return;let a=this.apps.findIndex(t=>t.path===p.path);a>=0?this.apps[a].opened=!0:(this.apps.push({name:p.name,path:p.path,icon:p.icon,selected:!1,opened:!0,forms:{},formCount:0,pin:!1}),a=this.apps.length-1),this.apps[a].forms[s]={title:o,icon:e||this.apps[a].icon},++this.apps[a].formCount}onFormRemoved(t,s){if(t===this.taskId)return;const o=n.task.get(t);if(!o)return;const e=this.apps.findIndex(t=>t.path===o.path);if(e<0)return;if(!this.apps[e].forms[s])return;if(delete this.apps[e].forms[s],--this.apps[e].formCount,this.apps[e].formCount>0)return;Object.keys(n.core.config["task.pin"]).includes(this.apps[e].path)?this.apps[e].opened=!1:this.apps.splice(e,1)}onFormFocused(t){const s=n.task.get(t);if(!s)return;const o=this.apps.findIndex(t=>t.path===s.path);o<0||(this.apps[o].selected=!0)}onFormBlurred(t){const s=n.task.get(t);if(!s)return;const o=this.apps.findIndex(t=>t.path===s.path);o<0||(this.apps[o].selected=!1)}onFormTitleChanged(t,s,o){const e=n.task.get(t);if(!e)return;const i=this.apps.findIndex(t=>t.path===e.path);i<0||this.apps[i].forms[s]&&(this.apps[i].forms[s].title=o)}onFormIconChanged(t,s,o){const e=n.task.get(t);if(!e)return;const i=this.apps.findIndex(t=>t.path===e.path);i<0||this.apps[i].forms[s]&&(this.apps[i].forms[s].icon=o||this.apps[i].icon)}onFormShowAndShowInTaskChange(t,s,o){if(t===this.taskId)return;const e=n.task.get(t);if(e)if(o){const t=n.form.get(s);if(!t)return;if(!t.showInSystemTask||!t.show)return;let o=this.apps.findIndex(t=>t.path===e.path);if(o>=0){if(this.apps[o].forms[s])return;this.apps[o].opened=!0}else this.apps.push({name:e.name,path:e.path,icon:e.icon,selected:!1,opened:!0,forms:{},formCount:0,pin:!1}),o=this.apps.length-1;this.apps[o].forms[s]={title:t.title,icon:t.icon||this.apps[o].icon},++this.apps[o].formCount}else{const t=this.apps.findIndex(t=>t.path===e.path);if(t<0)return;if(!this.apps[t].forms[s])return;if(delete this.apps[t].forms[s],--this.apps[t].formCount,this.apps[t].formCount>0)return;Object.keys(n.core.config["task.pin"]).includes(this.apps[t].path)?this.apps[t].opened=!1:this.apps.splice(t,1)}}onFormShowChanged(t,s,n){this.onFormShowAndShowInTaskChange(t,s,n)}onFormShowInSystemTaskChange(t,s,n){this.onFormShowAndShowInTaskChange(t,s,n)}onConfigChanged(t,s){if("task.pin"!==t)return;const n=s;for(const t in n){const s=n[t],o=this.apps.findIndex(s=>s.path===t);o<0?this.apps.unshift({name:s.name,path:t,icon:s.icon,selected:!1,opened:!1,forms:{},formCount:0,pin:!0}):this.apps[o].pin||(this.apps[o].pin=!0)}for(let t=0;t<this.apps.length;++t){const s=this.apps[t];s.pin&&(n[s.path]||(0===s.formCount?this.apps.splice(t,1):s.pin=!1))}}}class e extends n.core.AbstractApp{async main(){await this.run(await n.form.create(this,o))}}return e}(clickgo.modules.clickgo);